<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:UsefulThingsConverters="clr-namespace:UsefulThings.WPF.TypeConverters;assembly=UsefulThings"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:Library="clr-namespace:CSharpImageLibrary;assembly=CSharpImageLibrary"
                    xmlns:UsefulWPF="clr-namespace:UsefulThings.WPF;assembly=UsefulThings"
                    x:Class="UI_Project.PrimaryResourceDictionary"
                    x:ClassModifier="public"
                    xmlns:local="clr-namespace:UI_Project">
    
    <DropShadowEffect x:Key="GreenEffect" ShadowDepth="0" Color="LightGreen" BlurRadius="20" RenderingBias="Performance"/>
    
    <!-- Type Converters -->
    <UsefulThingsConverters:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
    <UsefulThingsConverters:BoolToVisibilityConverter x:Key="BoolToVisConverter"/>
    <UsefulThingsConverters:PercentageConverter x:Key="PercentageConverter"/>
    <UsefulThingsConverters:InverseBooleanConverter x:Key="InverseBoolConverter"/>
    <UsefulThingsConverters:MutuallyExclusiveCheckersConverter x:Key="MutuallyExclusiveCheckersConverter"/>
    <UsefulThingsConverters:ByteSizeToStringConverter x:Key="FileSizeConverter"/>
    <UsefulThingsConverters:DebugConverter x:Key="DebugConverter"/>
    <local:ImageEngineFormatDetailsToFormatConverter x:Key="FormatDetailsToFormatConverter"/>
    <!-- End Type Converters -->
    
    <sys:Boolean x:Key="TrueValue">
        True
    </sys:Boolean>

    <ObjectDataProvider MethodName="GetValues"
                    ObjectType="{x:Type sys:Enum}"
                    x:Key="Formats">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="Library:ImageEngineFormat"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>


    <!-- Animation Durations -->
    <Duration x:Key="StandardDuration">0:0:0.3</Duration>
    <KeyTime x:Key="DelayedStart">0:0:0.3</KeyTime>
    <!-- End Animation Durations -->
    
    <!-- Animations -->
    <Storyboard x:Key="FadeOutPanel">
        <DoubleAnimation To="0" Duration="{StaticResource StandardDuration}" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="{StaticResource DelayedStart}" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="FadeInPanel">
        <DoubleAnimation To="1" Duration="{StaticResource StandardDuration}" Storyboard.TargetProperty="Opacity">
            <DoubleAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>
    <!-- End Animations -->

    <!-- Global/Theme Styles -->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{StaticResource GreenEffect}"/>
                <Setter Property="Background" Value="#B2008000"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#B2808080"/>
                <Setter Property="BorderBrush" Value="#B2808080"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SelectionBrush" Value="LightGreen"/>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate x:Name="TextBoxInvalidPathTemplate">
                    <DockPanel LastChildFill="False">
                        <TextBlock Text="*" Foreground="Red" FontSize="20"/>
                        <AdornedElementPlaceholder>
                            <Border BorderBrush="Red" BorderThickness="2"/>
                        </AdornedElementPlaceholder>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- End Global/Theme Styles -->



    <Style x:Key="UnloadedOpacityStyle" TargetType="FrameworkElement">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Opacity" Value="1"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsImageLoaded}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FadeOutPanel}"/>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource FadeInPanel}"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DimensionIndicatorStyle" TargetType="Line">
        <Setter Property="Stroke" Value="#99FFFFFF"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="Stretch" Value="UniformToFill"/>
    </Style>

    <Style x:Key="VisibleTextDisplayStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="5,2"/>
    </Style>

    <Style x:Key="ValueStyle">
        <Setter Property="Inline.Foreground" Value="Wheat"/>
        <Setter Property="TextBlock.Padding" Value="5,2"/>
    </Style>

    <Style x:Key="DimensionIndicatorTextStyle" TargetType="TextBlock">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding MipIndex}" Value="0">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="4,2"/>
                <Setter Property="Foreground" Value="Wheat"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleStyle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="ReadOnlyStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
    </Style>

    <Style x:Key="TitleElementStyle" TargetType="Run">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="ContentControl" x:Key="GeneralAlphaSettingsPanelVisibility">
        <Setter Property="Visibility" Value="Visible"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.JPG}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_DXT1}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_V8U8}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_RGB_8}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_ATI1}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_G8_L8}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_A8L8}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_ATI2_3Dc}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="GeneralAlphaSettingsTemplate">
        <Border BorderBrush="Gray" BorderThickness="0.5">
            <DockPanel>
                <Label Content="Alpha Settings" Style="{StaticResource TitleStyle}" FontSize="14" DockPanel.Dock="Top"/>
                <CheckBox Content="Remove Alpha Channel" Foreground="White" IsChecked="{Binding RemoveGeneralAlpha}" DockPanel.Dock="Top" Margin="5,0,0,0"/>
            </DockPanel>
        </Border>
    </ControlTemplate>

    <Style TargetType="ContentControl" x:Key="DXT1AlphaSettingVisibility">
        <Setter Property="Visibility" Value="Collapsed"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.DDS_DXT1}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="CustomDDSSettings">
        <Border BorderBrush="Gray" BorderThickness="0.5">
            <DockPanel DockPanel.Dock="Bottom">
                <Label Content="Custom DDS Colour Masks" Style="{StaticResource TitleStyle}" DockPanel.Dock="Top"/>
                <Label Content="Note: These are untested and experimental. Good luck." DockPanel.Dock="Top" HorizontalAlignment="Center"/>
                <DockPanel LastChildFill="False">
                    <DockPanel.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="Width" Value="80"/>
                            <Setter Property="Margin" Value="0,0,10,0"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>

                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="White"/>
                        </Style>
                    </DockPanel.Resources>
                    <Label Content="Alpha:"/>
                    <TextBox Text="{Binding AMask, StringFormat=0x{0:X8}}"/>

                    <Label Content="Red:"/>
                    <TextBox Text="{Binding RMask, StringFormat=0x{0:X8}}"/>

                    <Label Content="Green:"/>
                    <TextBox Text="{Binding GMask, StringFormat=0x{0:X8}}"/>

                    <Label Content="Blue:"/>
                    <TextBox Text="{Binding BMask, StringFormat=0x{0:X8}}"/>
                </DockPanel>
            </DockPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="DXT1AlphaSettingTemplate">
        <Border BorderBrush="Gray" BorderThickness="0.5">
            <DockPanel>
                <DockPanel.Resources>
                    <Style TargetType="RadioButton">
                        <Setter Property="Margin" Value="8,0"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Style>
                </DockPanel.Resources>


                <Label Content="DXT1 Alpha Settings" Style="{StaticResource TitleStyle}" DockPanel.Dock="Top" FontSize="14"/>
                <RadioButton GroupName="{TemplateBinding Name}" Content="Remove Alpha" DockPanel.Dock="Bottom" IsChecked="{Binding DXT1AlphaRemove}"/>
                <RadioButton GroupName="{TemplateBinding Name}" Content="Flatten Alpha" DockPanel.Dock="Left" IsChecked="{Binding DXT1AlphaRemove, Converter={StaticResource InverseBoolConverter}}"/>
                <Label Content="Threshold:" HorizontalAlignment="Center" DockPanel.Dock="Left" IsEnabled="{Binding DXT1AlphaRemove, Converter={StaticResource InverseBoolConverter}}"/>
                <TextBlock Text="{Binding DXT1AlphaThreshold, Converter={StaticResource PercentageConverter}, StringFormat={}{0:#.#}%}" DockPanel.Dock="Right" 
                            Style="{StaticResource ValueStyle}" VerticalAlignment="Center" IsEnabled="{Binding DXT1AlphaRemove, Converter={StaticResource InverseBoolConverter}}"/>
                <Slider Minimum="0" Maximum="1" Value="{Binding DXT1AlphaThreshold}" DockPanel.Dock="Left" VerticalAlignment="Center" LargeChange="0.1" SmallChange="0.1" TickFrequency="0.1">
                    <Slider.Style>
                        <Style TargetType="Slider">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="Opacity" Value="1"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DXT1AlphaRemove}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Opacity" Value="0.6"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Slider.Style>
                </Slider>
            </DockPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="MainFormatSelector">
        <DockPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Label Content="Format: " FontWeight="Bold"/>
                <ComboBox  x:Name="SaveFormatCombo" ItemsSource="{UsefulWPF:EnumToItemsSource {x:Type Library:ImageEngineFormat}}" SelectedValue="{Binding SaveFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FormatDetailsToFormatConverter}}" 
                            DisplayMemberPath="DisplayName" SelectedValuePath="Value" IsSynchronizedWithCurrentItem="True" VerticalContentAlignment="Center" DropDownOpened="SaveFormatCombo_DropDownOpened"/>
                <TextBlock Text="{Binding ElementName=SaveFormatCombo, Path=SelectedValue, Converter={StaticResource EnumDescriptionConverter}}" VerticalAlignment="Center" Style="{StaticResource VisibleTextDisplayStyle}" 
                            TextWrapping="Wrap" FontSize="10"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Bottom" Margin="0,5" Visibility="{Binding IsDX10HeaderCheckboxEnabled, Converter={StaticResource BoolToVisConverter}}">
                <CheckBox x:Name="UseDX10HeaderCheckBox" Content="Use DX10 Header" IsChecked="{Binding UseDX10Header}" Foreground="White"/>
                <Label Content="WARNING: DX10 formats can take a VERY long time to generate, hence no preview." HorizontalAlignment="Center" FontWeight="Bold" Foreground="Red" >
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SaveFormat.IsDX10}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

            </StackPanel>
        </DockPanel>
    </ControlTemplate>

    <Style TargetType="ContentControl" x:Key="JPGSettingsVisibility">
        <Setter Property="Visibility" Value="Collapsed"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding SaveFormat}" Value="{x:Static Member=Library:ImageEngineFormat.JPG}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="JPGSettingsTemplate">
        <Border BorderBrush="Gray" BorderThickness="0.5">
            <DockPanel >
                <Label Content="JPG Quality Setting" Style="{StaticResource TitleStyle}" FontSize="14" DockPanel.Dock="Top"/>
                <TextBlock Text="{Binding JPG_CompressionSetting, StringFormat={}{0}%}" DockPanel.Dock="Right" Style="{StaticResource ValueStyle}" VerticalAlignment="Center"/>
                <Slider Minimum="1" Maximum="100" Value="{Binding JPG_CompressionSetting, Mode=TwoWay}" DockPanel.Dock="Bottom"/>
            </DockPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="MipSettingsTemplate">
        <DockPanel>
            <Label Content="Mipmap Settings:"/>
            <ComboBox x:Name="MipmapSettings" ItemsSource="{UsefulWPF:EnumToItemsSource {x:Type Library:MipHandling}}" DisplayMemberPath="DisplayName" SelectedValue="{Binding SaveMipType, Mode=TwoWay}" 
                            SelectedValuePath="Value" IsSynchronizedWithCurrentItem="True" VerticalContentAlignment="Center"/>
            <TextBlock Text="{Binding ElementName=MipmapSettings, Path=SelectedValue, Converter={StaticResource EnumDescriptionConverter}}" VerticalAlignment="Center" 
                            Style="{StaticResource VisibleTextDisplayStyle}" FontSize="10"/>
        </DockPanel>
    </ControlTemplate>

    <Style TargetType="Border" x:Key="FadedBackgroundBorder">
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.ColumnSpan" Value="5"/>
        <Setter Property="Grid.RowSpan" Value="5"/>
        <Setter Property="Background" Value="#B2000000"/>

        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Opacity" Value="0"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        
                    </BeginStoryboard>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="FadedInnerBorder">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="20"/>
    </Style>
</ResourceDictionary>